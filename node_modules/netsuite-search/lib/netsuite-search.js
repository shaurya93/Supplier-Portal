var _ = require('underscore');
var async = require('async');
var rest = require('restler');
var server = require('server.js');
console.log('server:'+server);

//var crypto = require('crypto');
//var OAuth   = require('oauth-1.0a/oauth-1.0a.js');
var testData = require('https://system.netsuite.com/core/media/media.nl?id=19637&c=TSTDRV1024523&h=b24f4286891e8cc41e49&_xt=.js');
console.log('testData ==> '+testData);
//var crypto = require('hmac-sha1.js');
//var OAuth = require('oauth-1.0a.js');

module.exports = function(settings) 
{
	if (typeof settings === 'undefined' || !settings.netsuite) 
	{
		throw("You must provide settings containing netsuite credentials");
	}

	var netsuite = settings.netsuite;

	function run(rest_param, callback) 
	{
	  
		console.log('inside run:');
	  
		var rest_url_selector=server.rec_type;
		//var rest_url_selector='ProfileView';
	  
		//var rest_url_selector1='PurchaseOrder';
		console.log('rest_url_selector:'+rest_url_selector);

		if(rest_url_selector=='ProfileView')
		{
			var restlet='https://rest.na1.netsuite.com/app/site/hosting/restlet.nl?script=172&deploy=1';
		}
		else if(rest_url_selector=='PurchaseOrder')
		//if(rest_url_selector1=='PurchaseOrder')
		{
			var restlet='https://rest.na1.netsuite.com/app/site/hosting/restlet.nl?script=175&deploy=1';
		}
		
		else if(rest_url_selector=='PackingList')
		{
			var restlet='https://rest.na1.netsuite.com/app/site/hosting/restlet.nl?script=177&deploy=1';
		}
		else if(rest_url_selector=='Bills')
		{
			var restlet='https://rest.na1.netsuite.com/app/site/hosting/restlet.nl?script=178&deploy=1';
		}
	
		//var  json_data = "&param="+JSON.stringify(rest_param);
		var  json_data = JSON.stringify(rest_param);
		console.log('rest_param::'+rest_param);
		console.log('json_data::'+json_data);
	
		var oauth = OAuth(
			{
				consumer: 
				{
					public: '857f3237925c76744c925d35c178d5fc0645a3a9a3316aa409ca24bfaf218174',
					secret: 'df9f92576ad7566f5152dd014a284ebbc52cb79049126e0287f0a0c1e0a04810'
				},
				signature_method: 'HMAC-SHA1'
			});
	
			var request_data = 
			{
				url: restlet,
				method: 'POST',
				data: {}
			};
	
			var token = 
			{
				public: '1a20c4ba3c3464c9b2a0d46ba10f2bd26db450a1097cde3e167d85fb9edcf63e',
				secret: '2927d308eeeaf1aff4c8dca874d71d85dcbec51727ac40d75e6799d95bf0d7ed'
			};
		
		var headerWithRealm = oauth.toHeader(oauth.authorize(request_data, token));
		console.log("Signature headerWithRealm.Authorization == "+headerWithRealm.Authorization);
		headerWithRealm.Authorization += ', realm="TSTDRV1024523"';
		
		var hd = headerWithRealm.Authorization;
		console.log("oauth_nonce == "+headerWithRealm.Authorization);
		
		//console.log("testData == "+testData.Authorization);
		
		var restOptions = 
		{
			headers:{'Authorization':hd,'Content-Type':'application/json'},
			data:json_data
		};
	
		function onError(error) { console.log("error reported:"+error.message);
			console.log('inside err:');
		} 
	
    
	    //var  json_data = "&param="+JSON.stringify(rest_param);
	    //console.log('json_data::'+json_data);
	    //columnsQuery = columns ? "&columns="+encodeURIComponent(JSON.stringify(columns)) : ''

		//var queryString = "&type="+type+filtersQuery+columnsQuery;
		console.log('Restlet::'+restlet);
		console.log('Restoption::'+restOptions);
		console.log('Object ==>'+restOptions.data);
		console.log('Object1 ==>'+restOptions.data[0]);
		console.log('Object2 ==>'+restOptions.data.length);
		console.log('Before Restlet call without proxy');
		//var  json_data = "&param="+encodeURIComponent(JSON.stringify(rest_param));
		rest.post(restlet, restOptions).on('success', function (result) {
			callback(null, result);
			console.log('inside rest call:');
		}).on('error', onError).on('fail', function (err) { onError(err.error); });
	
		/*
		rest.get(restlet + json_data, restOptions).on('success', function (result) {
	      callback(null, result);
	    }).on('error', onError).on('fail', function (err) { onError(err.error); });
		*/
  }

  return {
    run: run
  };
};
